// Test script pour v√©rifier l'authentification optimis√©e
const fetch = require("node-fetch");

async function testOptimizedAuth() {
  try {
    console.log("üîç Test de l'authentification optimis√©e...");

    // Test 1: V√©rifier que la page de login est accessible
    console.log("\n1. Test de la page de login...");
    const loginResponse = await fetch("http://localhost:3000/login");
    if (loginResponse.ok) {
      console.log("‚úÖ Page de login accessible");
    } else {
      console.log("‚ùå Page de login inaccessible");
    }

    // Test 2: V√©rifier que la page ZK login est accessible
    console.log("\n2. Test de la page ZK login...");
    const zkLoginResponse = await fetch("http://localhost:3000/zk-login");
    if (zkLoginResponse.ok) {
      console.log("‚úÖ Page ZK login accessible");
    } else {
      console.log("‚ùå Page ZK login inaccessible");
    }

    // Test 3: V√©rifier que la page de profil est accessible (sans auth)
    console.log("\n3. Test de la page de profil (sans auth)...");
    const profileResponse = await fetch("http://localhost:3000/dashboard/settings/profile");
    if (profileResponse.status === 401 || profileResponse.status === 302) {
      console.log("‚úÖ Page de profil prot√©g√©e (redirection vers login)");
    } else {
      console.log("‚ö†Ô∏è  Page de profil accessible sans auth");
    }

    console.log("\nüìã Instructions pour tester compl√®tement :");
    console.log("1. Allez sur http://localhost:3000/zk-login");
    console.log("2. Cr√©ez une identit√© ZK et connectez-vous");
    console.log("3. Allez sur http://localhost:3000/dashboard/settings/profile");
    console.log("4. V√©rifiez que les deux m√©thodes d'auth sont visibles");
    console.log("5. V√©rifiez que les donn√©es utilisateur sont correctement affich√©es");
    console.log("6. V√©rifiez dans les DevTools (Application > Cookies) que le cookie de session est petit");

  } catch (error) {
    console.error("‚ùå Erreur:", error.message);
  }
}

testOptimizedAuth(); 